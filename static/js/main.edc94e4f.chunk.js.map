{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","className","Avatar","src","Math","floor","random","Date","length","timestamp","toDate","toUTCString","IconButton","SearchOutlined","AttachFile","message","displayName","onChange","e","target","type","placeholder","onClick","preventDefault","console","log","add","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","seed","setSeed","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edc94e4f.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDqNLfMOfC067eyRaVxlIRPwwhoV6JllQY\",\r\n  authDomain: \"whatsapp-clone-bac25.firebaseapp.com\",\r\n  projectId: \"whatsapp-clone-bac25\",\r\n  storageBucket: \"whatsapp-clone-bac25.appspot.com\",\r\n  messagingSenderId: \"134277208287\",\r\n  appId: \"1:134277208287:web:ee1ef28511720472b9f16a\",\r\n  measurementId: \"G-67BPPW2LEH\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default db;","import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value = {useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React,{useState,useEffect} from 'react';\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport './Chat.css';\r\nimport { AttachFile, SearchOutlined } from '@material-ui/icons';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat() {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [input,setInput] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName,setRoomName] = useState(\"\");\r\n    const [messages,setMessages] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => (setRoomName(snapshot.data().name)));\r\n\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp','asc').onSnapshot(snapshot => (\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            ));\r\n        }\r\n    },[roomId])\r\n\r\n  \r\n\r\n    const sendMessage=(e)=>{\r\n        e.preventDefault();\r\n        console.log(\"You typed : \", input);\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/micah/${Math.floor(Math.random()*5000)}.svg`}/>\r\n\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>\r\n                        last seen{\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                     <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                     <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat_message ${message.name === user.displayName && 'chat_receiver'}`}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                     </p>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticonIcon/>\r\n                <form>\r\n                    <input value={input} onChange={e=>setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\r\n                    <button type=\"submit\" onClick={sendMessage}>Send a message</button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\n","import { Avatar } from '@material-ui/core';\r\nimport React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport './SidebarChat.css';\r\n\r\nfunction SidebarChat({id,name,addNewChat}) {\r\n    const [seed, setSeed] = useState('');\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'desc').onSnapshot((snapshot) => (\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            ))\r\n        }\r\n    },[id])\r\n\r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    },[])\r\n\r\n    const createChat=()=>{\r\n        const roomName = prompt(\"Please enter name for chat room\");\r\n\r\n        if(roomName){\r\n            //do some clever data base stuff...\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className='sidebarChat'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/micah/${seed}.svg`}/>\r\n                <div className=\"sidebarChat_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        \r\n    ):(\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add new chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React,{useState,useEffect} from 'react'\r\nimport './Sidebar.css'\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Sidebar() {\r\n    const [rooms,setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        const unsubscribe=db.collection('rooms').onSnapshot(snapshot =>(\r\n            setRooms(snapshot.docs.map(doc=>\r\n                ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                })\r\n                ))\r\n        ))\r\n        return()=>{\r\n            unsubscribe();\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                     <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                     <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_search\">\r\n                 <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined/>\r\n                    <input placeholder=\"Search or start new chat\" type = \"text\"/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room =>(\r\n                    <SidebarChat key ={room.id} id={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { auth, provider } from './firebase';\r\nimport './Login.css';\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n    const [{},dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then((result) => dispatch({\r\n            type: actionTypes.SET_USER,\r\n            user: result.user,\r\n        })).catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/225px-WhatsApp.svg.png\" alt = \"\"/>\r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign In with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import Chat from './Chat';\nimport React, { useState } from 'react'\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n  const [{user},dispatch] = useStateValue();\n\n\n  return (\n    //BEM naming convention\n    <div className=\"app\">  \n      {!user ? (\n        <Login/>\n      ):(\n      <div className=\"app_body\">\n       <Router>\n         <Sidebar/>\n         <Switch>\n            <Route path=\"/rooms/:roomId\">\n              <Chat/>\n            </Route>\n\n            <Route path=\"/\">\n              <Chat/>\n            </Route>\n        </Switch>\n       </Router>\n      </div>\n      )}   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from './reducer';\nimport {StateProvider} from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}